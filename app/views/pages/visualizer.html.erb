<!DOCTYPE html>
<html>
<head>
    <title>Visualizer</title>
</head>
<body style="background-color:#000;">
  <div style="margin-left:30px;margin-right:30px;text-align:center;font-family:monospace;color:white;">
  <h1 id="title">Visualizer?</h1>
    <canvas id="visualizer-screen" width="800" height="800" style="border:2px solid white;"></canvas>
    <script>
      var canvas = document.getElementsByTagName("canvas")[0];
      visualizer = new Visualizer(canvas);

      if (!window.AudioContext) {
        if (!window.webkitAudioContext) {
          alert('no audiocontext found');
        }
        window.AudioContext = window.webkitAudioContext;
      }

      var context = new AudioContext();
      var audioBuffer;
      var sourceNode;
      var ctx = canvas.getContext("2d");

      setupAudioNodes();
      loadSound("public/AvecVous.m4a");

      // L, R volume meters
      // function setupAudioNodes() {
      //   javascriptNode = context.createScriptProcessor(2048, 1, 1);
      //   javascriptNode.connect(context.destination);

      //   analyser = context.createAnalyser();
      //   analyser.smoothingTimeConstant = 0.3;
      //   analyser.fftSize = 1024;

      //   analyser2 = context.createAnalyser();
      //   analyser2.smoothingTimeConstant = 0.0;
      //   analyser2.fftSize = 1024;

      //   sourceNode = context.createBufferSource();
      //   splitter = context.createChannelSplitter();

      //   sourceNode.connect(splitter);

      //   splitter.connect(analyser, 0, 0);
      //   splitter.connect(analyser2, 1, 0);

      //   analyser.connect(javascriptNode);

      //   sourceNode.connect(context.destination);
      // }

      function setupAudioNodes() {
        javascriptNode = context.createScriptProcessor(2048, 1, 1);
        javascriptNode.connect(context.destination);

        analyser = context.createAnalyser();
        analyser.smoothingTimeConstant = 0.3;
        analyser.fftSize = 512;

        sourceNode = context.createBufferSource();
        sourceNode.connect(analyser);
        analyser.connect(javascriptNode);

        sourceNode.connect(context.destination);
      };

      function loadSound(url) {
        // var request = new XMLHttpRequest();
        // request.open('GET', url, true);
        // request.responseType = 'arraybuffer';
        var request = new Audio("/song");
        context.decodeAudioData(new ArrayBuffer(request), function(buffer) {
            playSound(buffer);
          }, onError);
        // request.onload = function() {
        //   context.decodeAudioData(request.response, function(buffer) {
        //     playSound(buffer);
        //   }, onError);
        // }
        // request.send();
      };

      function playSound(buffer) {
        sourceNode.buffer = buffer;
        sourceNode.start(0);
        setupTimer.call(visualizer, 108);
      };

      function onError(e) {
        console.log(e);
      };

      var gradient = ctx.createLinearGradient(0,0,0,300);
      // gradient.addColorStop(1,'#000000');
      // gradient.addColorStop(0.75,'#ff0000');
      // gradient.addColorStop(0.25,'#ffff00');
      gradient.addColorStop(0,'#ffffff');

      // gradient.addColorStop(1,'#000000');
      // gradient.addColorStop(0.75,'#ff0000');
      // gradient.addColorStop(0.25,'#ffff00');
      // gradient.addColorStop(0,'#ffffff');

      // javascriptNode.onaudioprocess = function() {
      //   var array = new Uint8Array(analyser.frequencyBinCount);
      //   analyser.getByteFrequencyData(array);
      //   var average = getAverageVolume(array);

      //   var array2 = new Uint8Array(analyser2.frequencyBinCount);
      //   analyser2.getByteFrequencyData(array2);
      //   var average2 = getAverageVolume(array2);

      //   ctx.clearRect(0, 0, 60, 130);

      //   var my_gradient = ctx.createLinearGradient(0, 0, 0, 170);
      //   my_gradient.addColorStop(0, "black");
      //   my_gradient.addColorStop(0.5, "red");
      //   my_gradient.addColorStop(1, "orange");

      //   ctx.fillStyle = my_gradient;

      //   ctx.fillRect(0, 130 - average, 25, 130);
      //   ctx.fillRect(30, 130 - average2, 25, 130);
      // }

      var my_gradient = ctx.createLinearGradient(0, 800, 800, 800);
      my_gradient.addColorStop(0, "#555");
      // my_gradient.addColorStop(0.5, "red");
      my_gradient.addColorStop(1, "white");

      javascriptNode.onaudioprocess = function() {
        var array = new Uint8Array(analyser.frequencyBinCount);
        analyser.getByteFrequencyData(array);

        ctx.clearRect(0, 0, 800, 800);

        // ctx.fillStyle = my_gradient;
        // ctx.fillRect(0, 0, 800, 800);
        // ctx.fillStyle = gradient;

        // ctx.shadowBlur = 30;
        // ctx.shadowColor = "white";

        visualizer.tick(array);
        // drawSpectrum(array);
        // drawSecondSpectrum(array);
      }

      function drawSpectrum(array) {
        for (var n = 0; n < 5; n++) {
          for (var i = 0; i < array.length; i++) {
            var value = array[i];
            // var volume = getAverageVolume(array);
            // ctx.fillStyle = randomColor();
            if (i % 2 === 0) {
              ctx.fillStyle = colorFromFreq(i, value, n);
              ctx.fillRect(i * 5 + n, 800 - (2 - .6 * n) * value - 200, 5, 800);
            } else {
              ctx.fillStyle = colorFromFreq(i, value, n);
              ctx.fillRect(i * 5 + n - 10, 800 - (2 - .6 * n) * value - 200, 10, 800);
            }
          }
        }

        // for (var n = 0; n < 5; n++) {
        //   for (var i = 0; i < array.length; i++) {
        //     var value = array[i];
        //     // var volume = getAverageVolume(array);
        //     // ctx.fillStyle = randomColor();
        //     if (i % 2 === 0) {
        //       ctx.fillStyle = colorFromFreq(i, value, n);
        //       ctx.fillRect((i * 5 + n), (800 - (2 - .6 * n) * value - 200), 5, 0);
        //     } else {
        //       ctx.fillStyle = colorFromFreq(i, value, n);
        //       ctx.fillRect((i * 5 + n - 10), (800 - (2 - .6 * n) * value - 200), 10, 0);
        //     }
        //   }
        // }

        // for (var n = 0; n < 5; n++) {
        //   for (var i = 0; i < array.length; i++) {
        //     var value = array[i];
        //     // var volume = getAverageVolume(array);
        //     // ctx.fillStyle = randomColor();
        //     if (i % 2 === 0) {
        //       ctx.fillStyle = colorFromFreq(i, value, n);
        //       ctx.fillRect(800 - (2 - .6 * n) * value - 200, i * 5 + n, 800, 5);
        //     } else {
        //       ctx.fillStyle = colorFromFreq(i, value, n);
        //       ctx.fillRect(800 - (2 - .6 * n) * value - 200, i * 5 + n - 10, 800, 10);
        //     }
        //   }
        // }

        // for (var i = 0; i < array.length; i++) {
        //   var value = array[i];
        //   // var volume = getAverageVolume(array);
        //   // ctx.fillStyle = randomColor();
        //   ctx.fillStyle = colorFromFreq(i);
        //   ctx.fillRect(i * 5 + 2, 800 - 1.5 * value, 2, 800);
        // }
      };

      function drawSecondSpectrum(array) {
        for (var i = 0; i < array.length; i++) {
          var value = array[i];
          // ctx.fillStyle = 'rgba(' + parseInt(255 * Math.random()) + ', ' + parseInt(255 * Math.random()) + ', ' + parseInt(255 * Math.random()) + ', .1)';
          ctx.fillStyle = 'rgba(255, 255, 255, .2)';
          ctx.fillRect(i * 5, 800 - 2 * value, 1, 800);
        }
      };

      function colorFromFreq(freq, value, iteration) {
        // return 'rgba(' + freq + ', ' + freq + ', ' + 0 + ', .6)';
        return 'rgba(' + (255 - iteration * 20) + ', ' + (255 - iteration * 20) + ', ' + iteration * 20 + ', ' + 100 / (value + 1) + ')';
        // return 'rgba(' + freq + ', 0, ' + (255 - freq) + ', ' + getAverageVolume() + ')';
      };

      function randomColor() {
        var colorHex = "#";

        for (var i = 0; i < 6; i++) {
          var randomNum = parseInt(Math.random() * 15);

          if (randomNum === 10) {
            randomNum = "a";
          } else if (randomNum === 11) {
            randomNum = "b";
          } else if (randomNum === 12) {
            randomNum = "c";
          } else if (randomNum === 13) {
            randomNum = "d";
          } else if (randomNum === 14) {
            randomNum = "e";
          } else if (randomNum === 15) {
            randomNum = "f";
          } else {
            randomNum = randomNum.toString();
          }

          colorHex = colorHex + randomNum;
        }

        return colorHex;
      };

      function getAverageVolume(array) {
        var values = 0;
        var average;

        var length = array.length;

        for (var i = 0; i < array.length; i++) {
          values += array[i];
        }

        average = values / length;
        return average;
      };

    </script>
  </div>
</body>
</html>