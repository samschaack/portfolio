<!DOCTYPE html>
<html>
<head>
  <title>Visualizer</title>
</head>
<body style="background-color:#000;">
  <div style="margin-left:30px;margin-right:30px;text-align:center;font-family:monospace;color:white;">
  <h1 id="title">Visualizer - Baby Robot EP By Ott (Loading...)</h1>
  <!-- <h4 id="tick"></h4> -->
    <canvas id="visualizer-screen" width="800" height="800" style="border:2px solid white;"></canvas>
    <script>
      var canvas = document.getElementsByTagName("canvas")[0];
      visualizer = new Visualizer(canvas);

      if (!window.AudioContext) {
        if (!window.webkitAudioContext) {
          alert('no audiocontext found');
        }
        window.AudioContext = window.webkitAudioContext;
      }

      var context = new AudioContext();
      var audioBuffer;
      var sourceNode;
      var ctx = canvas.getContext("2d");
      ctx.fillStyle = 'black';
      ctx.fillRect(0, 0, 800, 800);

      setupAudioNodes();
      loadSound();

      function setupAudioNodes() {
        javascriptNode = context.createScriptProcessor(2048, 1, 1);
        javascriptNode.connect(context.destination);

        analyser = context.createAnalyser();
        analyser.smoothingTimeConstant = 0.3;
        analyser.fftSize = 512;

        sourceNode = context.createBufferSource();
        sourceNode.connect(analyser);
        analyser.connect(javascriptNode);

        sourceNode.connect(context.destination);
      };

      function loadSound() {
        var request = new XMLHttpRequest();
        request.open('GET', "song", true);
        request.responseType = 'arraybuffer';

        request.onload = function() {
          context.decodeAudioData(request.response, function(buffer) {
            playSound(buffer);
            $('#title').text("Visualizer - Baby Robot EP By Ott");
          }, onError);
        }
        request.send();
      };

      function playSound(buffer) {
        sourceNode.buffer = buffer;
        sourceNode.start(0);
        setupTimer.call(visualizer, 108);
      };

      function onError(e) {
        console.log(e);
      };

      javascriptNode.onaudioprocess = function() {
        var array = new Uint8Array(analyser.frequencyBinCount);
        analyser.getByteFrequencyData(array);

        ctx.fillStyle = 'rgba(0, 0, 0, .4)';
        ctx.fillRect(0, 0, 800, 800);

        visualizer.tick(array);
      }
    </script>
  </div>
  <br>
  <div style="text-align:center;">
    <a style="color:#444" href="/">back to homepage</a><br><br>
  </div>
</body>
</html>

<!-- new mode for first vocal section -->
<!-- fix layering on various modes -->
<!-- lower back ring on symmetry mode -->